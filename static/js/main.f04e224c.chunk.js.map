{"version":3,"sources":["components/circle.js","utils/utils.js","components/core.js","components/line.js","components/button.js","components/mouse.js","components/graph.js","components/title.js","App.js","index.js"],"names":["Circle","cx","cy","strokeColor","strokeWidth","radius","dashOffset","dashArray","fill","style","stroke","r","strokeDashoffset","strokeDasharray","getRandomInt","min","max","Math","ceil","floor","random","StyledCore","styled","div","Core","dimens","viewBox","isHovered","w","h","useState","da1","setDa1","da2","setDa2","coreColor","setCoreColor","useEffect","setTimeout","id","setInterval","clearInterval","width","height","transition","Line","keyframes","path","da","setDa","d","x","y","MenuButton","button","position","top","left","right","bottom","p","border","Button","label","onHover","buttonRef","useRef","onMouseEnter","current","onMouseLeave","ref","Container","Text","h3","Mouse","Graph","ht","d1","setD1","graphColor","setGraphColor","interval","focusIn","h1","Title","title","App","containerRef","setDimens","setPath","hovered","setIsHovered","setTitle","mouseCoords","setMouseCoords","getBoundingClientRect","handleHover","innerText","X","Y","join","className","onMouseMove","e","clientX","clientY","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f04e224c.chunk.js","sourcesContent":["export const Circle = ({\r\n  cx,\r\n  cy,\r\n  strokeColor,\r\n  strokeWidth,\r\n  radius,\r\n  dashOffset,\r\n  dashArray,\r\n  fill = \"none\",\r\n  style = {}\r\n}) => {\r\n  return (\r\n    <circle\r\n      cx={cx}\r\n      cy={cy}\r\n      fill={fill}\r\n      stroke={strokeColor}\r\n      strokeWidth={strokeWidth}\r\n      r={radius}\r\n      strokeDashoffset={dashOffset}\r\n      strokeDasharray={dashArray}\r\n      style={style}\r\n    />\r\n  );\r\n};\r\n","export const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n};\r\n","import styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Circle } from \"./circle\";\r\nimport { getRandomInt } from \"../utils/utils\";\r\n\r\nconst StyledCore = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Core = ({ dimens, viewBox, isHovered }) => {\r\n  const w = dimens.w;\r\n  const h = dimens.h;\r\n\r\n  const cx = w / 2 || 0;\r\n  const cy = h / 2 || 0;\r\n  const radius = 100;\r\n\r\n  const [da1, setDa1] = useState(\"44 2 6\");\r\n  const [da2, setDa2] = useState(\"94 164\");\r\n  const [coreColor, setCoreColor] = useState(\"rgba(255,255,255,0.95)\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setDa1(`${getRandomInt(50, 100)} 2 0`);\r\n      setTimeout(() => {\r\n        setDa1(`44 ${getRandomInt(0, 10)} ${getRandomInt(2, 10)}`);\r\n      }, 500);\r\n    }, 20);\r\n\r\n    setTimeout(() => {\r\n      setDa2(`${getRandomInt(5, 100)} 164`);\r\n    }, 20);\r\n  }, [isHovered]);\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setCoreColor(\r\n        `rgba(${getRandomInt(0, 255)},\r\n        ${getRandomInt(0, 255)},\r\n        ${getRandomInt(0, 255)}, 0.98)`\r\n      );\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledCore>\r\n      <svg viewBox={viewBox} width={w} height={h}>\r\n        <Circle\r\n          cx={cx}\r\n          cy={cy}\r\n          strokeColor={coreColor}\r\n          strokeWidth={16}\r\n          radius={radius}\r\n          dashArray=\"6 2\"\r\n          style={{\r\n            transition: \"stroke 1s ease\"\r\n          }}\r\n        />\r\n        <Circle\r\n          cx={cx}\r\n          cy={cy}\r\n          strokeColor={\"rgba(10,189,227,0.85)\"}\r\n          strokeWidth={8}\r\n          radius={radius}\r\n          dashArray={\"8 70 6\"}\r\n        />\r\n        <Circle\r\n          cx={cx}\r\n          cy={cy}\r\n          strokeColor={\"rgba(80,219,251,0.8)\"}\r\n          strokeWidth={6}\r\n          radius={radius - 20}\r\n          style={{\r\n            strokeDasharray: da1,\r\n            strokeDashoffset: 14,\r\n            transition:\r\n              \"stroke-dashoffset 2.5s ease 0s, stroke-dasharray 1s ease 0s, stroke 2s\"\r\n          }}\r\n        />\r\n        <Circle\r\n          cx={cx}\r\n          cy={cy}\r\n          strokeColor={\"rgba(0,210,211,0.5)\"}\r\n          strokeWidth={6}\r\n          radius={radius - 20}\r\n          style={{\r\n            strokeDasharray: \"24 14\",\r\n            strokeDashoffset: 14,\r\n            transition:\r\n              \"stroke-dashoffset 2s ease 0s, stroke-dasharray 2s ease 0s, stroke 2s\"\r\n          }}\r\n        />\r\n        <Circle\r\n          cx={cx}\r\n          cy={cy}\r\n          strokeColor={\"rgba(80,219,251,0.75)\"}\r\n          strokeWidth={3}\r\n          radius={radius - 30}\r\n          style={{\r\n            strokeDasharray: da2,\r\n            strokeDashoffset: 4,\r\n            transition:\r\n              \"stroke-dashoffset 2s ease 0s, stroke-dasharray 2s ease 0s, stroke 2s\"\r\n          }}\r\n        />\r\n      </svg>\r\n    </StyledCore>\r\n  );\r\n};\r\n","import { keyframes } from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getRandomInt } from \"../utils/utils\";\r\n\r\nconst focusIn = keyframes`\r\n  0% {\r\n    -webkit-filter: blur(12px);\r\n            filter: blur(12px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    -webkit-filter: blur(0px);\r\n            filter: blur(0px);\r\n    opacity: 1;\r\n  }\r\n}\r\n`;\r\n\r\nexport const Line = ({ path, isHovered, viewBox, dimens }) => {\r\n  const [da, setDa] = useState(`300 10`);\r\n\r\n  const w = dimens.w;\r\n  const h = dimens.h;\r\n\r\n  let d = `M ${path.x},${path.y} L ${w / 2 + 100} ${h / 2} h -5`;\r\n  if (path.x < w / 2) {\r\n    d = `M ${path.x},${path.y} L ${w / 2 - 100} ${h / 2} h 5`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setDa(`${getRandomInt(50, 100)} 0`);\r\n      setTimeout(() => {\r\n        setDa(`50 ${getRandomInt(4, 20)} ${getRandomInt(20, 30)}`);\r\n      }, 500);\r\n    }, 20);\r\n  }, [isHovered]);\r\n\r\n  return (\r\n    <>\r\n      {/* <svg viewBox={viewBox} width={w} height={h}>\r\n          <path\r\n            id=\"lineAB\"\r\n            d=\"M 123 187 l 0 0 l 80 220 h 150\"\r\n            stroke=\"rgba(80,219,251,0.8)\"\r\n            strokeWidth=\"3\"\r\n            fill=\"none\"\r\n            style={{\r\n              strokeDasharray: \"300 10\",\r\n              transition:\r\n                \"stroke-dashoffset 2.5s ease 0s, stroke-dasharray 1s ease 0s, stroke 2s\"\r\n            }}\r\n          />\r\n        </svg> */}\r\n      {isHovered ? (\r\n        <svg viewBox={viewBox} width={w} height={h}>\r\n          <path\r\n            id=\"line\"\r\n            d={d}\r\n            stroke=\"rgba(80,219,251,0.8)\"\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n            strokeDasharray={da}\r\n            style={{\r\n              transition:\r\n                \"stroke-dashoffset 2s ease 0s, stroke-dasharray 1s ease 0s, stroke 2s\"\r\n            }}\r\n          />\r\n        </svg>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n{\r\n  /* <line\r\nx1=\"0\"\r\nx2={w / 2 - 350}\r\ny1={h / 2 - 150}\r\ny2={h / 2 - 150}\r\nstroke=\"rgba(80,219,251,0.8)\"\r\nstroke-width=\"2\"\r\nstroke-linecap=\"round\"\r\nstyle={{\r\n  strokeDasharray: \"23 3 17\",\r\n  transition:\r\n    \"stroke-dashoffset 2.5s ease 0s, stroke-dasharray 1s ease 0s, stroke 2s\"\r\n}}\r\n/>  */\r\n}\r\n","import { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MenuButton = styled.button`\r\n  position: absolute;\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #1a2980 0%,\r\n    #26d0ce 51%,\r\n    #1a2980 100%\r\n  );\r\n  top: ${({ position }) => position.top};\r\n  left: ${({ position }) => position.left};\r\n  right: ${({ position }) => position.right};\r\n  bottom: ${({ position }) => position.bottom};\r\n  color: ${(p) => `${p.border}`};\r\n  font-size: 1.25rem;\r\n  border: 1px solid ${(p) => p.border};\r\n  cursor: pointer;\r\n  min-width: 160px;\r\n  padding: 15px 45px;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  background-size: 200% auto;\r\n  box-shadow: ${(p) => `0 0 20px ${p.border}`};\r\n  border-radius: 10px;\r\n  display: block;\r\n  &:hover {\r\n    background-position: right center;\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const Button = ({ label, border, position, onHover }) => {\r\n  const buttonRef = useRef(null);\r\n\r\n  return (\r\n    <MenuButton\r\n      onMouseEnter={() => onHover(buttonRef.current, true)}\r\n      onMouseLeave={() => onHover(buttonRef, false)}\r\n      ref={buttonRef}\r\n      border={border}\r\n      position={position}\r\n    >\r\n      {label}\r\n    </MenuButton>\r\n  );\r\n};\r\n\r\n/*\r\n.btn-grad {background-image: linear-gradient(to right, #1A2980 0%, #26D0CE  51%, #1A2980  100%)}\r\n.btn-grad {\r\n   margin: 10px;\r\n   padding: 15px 45px;\r\n   text-align: center;\r\n   text-transform: uppercase;\r\n   transition: 0.5s;\r\n   background-size: 200% auto;\r\n   color: white;            \r\n   box-shadow: 0 0 20px #eee;\r\n   border-radius: 10px;\r\n   display: block;\r\n }\r\n\r\n .btn-grad:hover {\r\n   background-position: right center; \r\n   color: #fff;\r\n   text-decoration: none;\r\n }\r\n*/\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 5%;\r\n  border: 1px solid #00adb5;\r\n  padding: 4px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 20px #aaa;\r\n  min-width: 150px;\r\n`;\r\n\r\nconst Text = styled.h3`\r\n  font-size: 1rem;\r\n  letter-spacing: 0.5rem;\r\n  opacity: 0.75;\r\n  color: #00adb5;\r\n`;\r\n\r\nexport const Mouse = ({ x, y }) => {\r\n  return (\r\n    <Container>\r\n      <Text>\r\n        [{x}, {y}]\r\n      </Text>\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getRandomInt } from \"../utils/utils\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  left: 1%;\r\n  opacity: 0.5;\r\n`;\r\n\r\nexport const Graph = ({ w, h, viewBox, ht }) => {\r\n  const [d1, setD1] = useState(\r\n    \"M 10 0 V 200 M 50 0 V 200  M 90 0 V 200 M 130 0 V 200 M 170 0 V 200\"\r\n  );\r\n  const [graphColor, setGraphColor] = useState(\"rgba(255,255,255,0.95)\");\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setD1(\r\n        `M 10 0 V ${getRandomInt(0, 200)} M 50 0 V ${getRandomInt(\r\n          0,\r\n          150\r\n        )}  M 90 0 V ${getRandomInt(0, 180)} \r\n        M 130 0 V ${getRandomInt(0, 200)} M 170 0 V ${getRandomInt(0, 200)}`\r\n      );\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => {\r\n      setGraphColor(\r\n        `rgba(${getRandomInt(0, 255)},\r\n        ${getRandomInt(0, 255)},\r\n        ${getRandomInt(0, 255)}, 0.98)`\r\n      );\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <svg viewBox={viewBox} width={w} height={h}>\r\n        <path\r\n          id=\"graph1\"\r\n          d={d1}\r\n          stroke={graphColor}\r\n          strokeWidth=\"16\"\r\n          strokeDasharray=\"2 2 4\"\r\n          fill=\"none\"\r\n          style={{\r\n            transition: \"d 0.25s, stroke 2s\"\r\n          }}\r\n        />\r\n      </svg>\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst focusIn = keyframes`\r\n  0% {\r\n    -webkit-filter: blur(12px);\r\n            filter: blur(12px);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    -webkit-filter: blur(0px);\r\n            filter: blur(0px);\r\n    opacity: 1;\r\n  }\r\n}\r\n`;\r\n\r\nconst Text = styled.h1`\r\n  color: #fff;\r\n  font-size: 1.25rem;\r\n  letter-spacing: 0.2rem;\r\n  opacity: 0%;\r\n  animation: ${focusIn} 1s cubic-bezier(0.55, 0.085, 0.68, 0.53) both;\r\n`;\r\n\r\nexport const Title = ({ title }) => {\r\n  return (\r\n    <Container>\r\n      <Text>{title}</Text>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Core } from \"./components/core\";\nimport { Line } from \"./components/line\";\nimport { Button } from \"./components/button\";\nimport { Mouse } from \"./components/mouse\";\nimport { Graph } from \"./components/graph\";\n\nimport \"./styles.css\";\nimport { Title } from \"./components/title\";\n\nexport const MenuButton = styled.button`\n  position: absolute;\n  top: ${({ position }) => position.top};\n  left: ${({ position }) => position.left};\n  right: ${({ position }) => position.right};\n  bottom: ${({ position }) => position.bottom};\n  color: #fff;\n  font-size: 1.25rem;\n  border: 1px solid ${(p) => p.border};\n  border-radius: 3px;\n  padding: 8px 40px;\n  background: transparent;\n  cursor: pointer;\n  min-width: 160px;\n`;\n\nexport default function App() {\n  const containerRef = useRef(null);\n\n  const [dimens, setDimens] = useState({ width: 0, height: 0 });\n  const [path, setPath] = useState({ x: 0, y: 0 });\n  const [hovered, setIsHovered] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [mouseCoords, setMouseCoords] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    setDimens({\n      w: containerRef.current.getBoundingClientRect().width,\n      h: containerRef.current.getBoundingClientRect().height\n    });\n  }, [containerRef]);\n\n  const handleHover = (ref, isHovered) => {\n    setIsHovered(isHovered);\n\n    if (isHovered) {\n      setTitle(ref.innerText);\n      const X =\n        ref.getBoundingClientRect().x + ref.getBoundingClientRect().width / 2;\n      const Y =\n        ref.getBoundingClientRect().y + ref.getBoundingClientRect().height / 2;\n      setPath({ x: X, y: Y });\n    } else {\n      setTitle(null);\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    setMouseCoords({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const viewBox = [0, 0, dimens.width, dimens.height].join(\" \");\n\n  return (\n    <>\n      <div className=\"App\" ref={containerRef} onMouseMove={handleMouseMove}>\n        <Graph viewBox={viewBox} ht={mouseCoords.y} />\n        {hovered && <Title title={title} />}\n        <Mouse x={mouseCoords.x} y={mouseCoords.y} w={dimens.w} h={dimens.h} />\n        <Line\n          path={path}\n          dimens={dimens}\n          isHovered={hovered}\n          viewBox={viewBox}\n        />\n\n        <Core dimens={dimens} isHovered={hovered} viewBox={viewBox} />\n      </div>\n\n      <Button\n        border=\"#ee5253\"\n        position={{ top: \"20%\", left: \"5%\" }}\n        label=\"ARMOUR\"\n        onHover={handleHover}\n      />\n      <Button\n        border=\"#ff9f43\"\n        position={{ top: \"20%\", right: \"5%\" }}\n        label=\"DRAGON\"\n        onHover={handleHover}\n      />\n\n      <Button\n        border=\"#00d2d3\"\n        position={{ bottom: \"20%\", left: \"5%\" }}\n        label=\"JADE\"\n        onHover={handleHover}\n      />\n\n      <Button\n        border=\"#ff9ff3\"\n        position={{ right: \"5%\", bottom: \"20%\" }}\n        label=\"JIGGLY\"\n        onHover={handleHover}\n      />\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}